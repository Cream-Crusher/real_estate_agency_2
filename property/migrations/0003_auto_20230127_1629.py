# Generated by Django 2.2.24 on 2023-01-27 13:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('property', '0002_auto_20190829_2242'),
    ]

    operations = [
        migrations.RenameField(
            model_name='flat',
            old_name='owners_phonenumber',
            new_name='phonenumber',
        ),
        migrations.AddField(
            model_name='flat',
            name='liked_by',
            field=models.ManyToManyField(blank=True, related_name='liked_apartments', to=settings.AUTH_USER_MODEL, verbose_name='лайки'),
        ),
        migrations.AddField(
            model_name='flat',
            name='new_building',
            field=models.BooleanField(choices=[('NEW_BUILDING', 'Новостройка'), ('OLD_BUILDING', 'Cтарое здание'), ('UNKNOWN', 'Неизвестно')], db_index=True, default='False', null=True, verbose_name='Статус постройки здания'),
        ),
        migrations.AddField(
            model_name='flat',
            name='pure_phone',
            field=phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='RU', verbose_name='Нормализованный номер владельца'),
        ),
        migrations.CreateModel(
            name='UserComplaint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст жалобы')),
                ('flat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='property.Flat', verbose_name='Адрес')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL, verbose_name='Кто жаловался')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО владельца')),
                ('apartment', models.ManyToManyField(blank=True, related_name='owners', to='property.Flat', verbose_name='Квартир(а\\ы) в собственности')),
            ],
        ),
    ]
